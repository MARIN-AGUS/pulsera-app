{"ast":null,"code":"var _jsxFileName = \"/Users/aguspena/Downloads/pulsera-app-con-mapa-dinamico/pulsera-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport DevicePanel from './components/DevicePanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [dispositivos, setDispositivos] = useState([]);\n  const mapRef = useRef(null);\n  const [center, setCenter] = useState({\n    lat: 19.4326,\n    lng: -99.1332\n  });\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: 'AIzaSyA-JDW1_wZjD9uXS_v-LpOAs8YXb1E7FhI'\n  });\n  const centrarEn = (lat, lng) => {\n    setCenter({\n      lat,\n      lng\n    });\n    if (mapRef.current) {\n      mapRef.current.panTo({\n        lat,\n        lng\n      });\n    }\n  };\n  useEffect(() => {\n    const fetchUbicaciones = async () => {\n      try {\n        const res = await axios.get('http://localhost:5001/api/ubicacion');\n        setDispositivos(res.data);\n        if (res.data.length > 0) setCenter({\n          lat: res.data[0].latitud,\n          lng: res.data[0].longitud\n        });\n      } catch (err) {\n        console.error('Error al obtener datos:', err);\n      }\n    };\n    fetchUbicaciones();\n    const intervalo = setInterval(fetchUbicaciones, 10000);\n    return () => clearInterval(intervalo);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(DevicePanel, {\n      dispositivos: dispositivos,\n      centrarEn: centrarEn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      center: center,\n      zoom: 14,\n      mapContainerStyle: {\n        width: '100%',\n        height: '100vh'\n      },\n      onLoad: map => mapRef.current = map,\n      children: dispositivos.map((d, i) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: d.latitud,\n          lng: d.longitud\n        },\n        label: d.dispositivoId\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cargando mapa...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"t0uAlM+PBsGdjkHqCrbQGkoM2SE=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","GoogleMap","Marker","useJsApiLoader","DevicePanel","jsxDEV","_jsxDEV","App","_s","dispositivos","setDispositivos","mapRef","center","setCenter","lat","lng","isLoaded","googleMapsApiKey","centrarEn","current","panTo","fetchUbicaciones","res","get","data","length","latitud","longitud","err","console","error","intervalo","setInterval","clearInterval","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","zoom","mapContainerStyle","width","height","onLoad","map","d","i","position","label","dispositivoId","_c","$RefreshReg$"],"sources":["/Users/aguspena/Downloads/pulsera-app-con-mapa-dinamico/pulsera-frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport DevicePanel from './components/DevicePanel';\n\nconst App = () => {\n  const [dispositivos, setDispositivos] = useState([]);\n  const mapRef = useRef(null);\n  const [center, setCenter] = useState({ lat: 19.4326, lng: -99.1332 });\n\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: 'AIzaSyA-JDW1_wZjD9uXS_v-LpOAs8YXb1E7FhI'\n  });\n\n  const centrarEn = (lat, lng) => {\n    setCenter({ lat, lng });\n    if (mapRef.current) {\n      mapRef.current.panTo({ lat, lng });\n    }\n  };\n\n  useEffect(() => {\n    const fetchUbicaciones = async () => {\n      try {\n        const res = await axios.get('http://localhost:5001/api/ubicacion');\n        setDispositivos(res.data);\n        if (res.data.length > 0) setCenter({ lat: res.data[0].latitud, lng: res.data[0].longitud });\n      } catch (err) {\n        console.error('Error al obtener datos:', err);\n      }\n    };\n\n    fetchUbicaciones();\n    const intervalo = setInterval(fetchUbicaciones, 10000);\n    return () => clearInterval(intervalo);\n  }, []);\n\n  return isLoaded ? (\n    <div style={{ display: 'flex' }}>\n      <DevicePanel dispositivos={dispositivos} centrarEn={centrarEn} />\n      <GoogleMap\n        center={center}\n        zoom={14}\n        mapContainerStyle={{ width: '100%', height: '100vh' }}\n        onLoad={(map) => (mapRef.current = map)}\n      >\n        {dispositivos.map((d, i) => (\n          <Marker\n            key={i}\n            position={{ lat: d.latitud, lng: d.longitud }}\n            label={d.dispositivoId}\n          />\n        ))}\n      </GoogleMap>\n    </div>\n  ) : (\n    <div>Cargando mapa...</div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}